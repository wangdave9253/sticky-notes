steps:
  - name: Checkout repository
    uses: actions/checkout@v3

  - name: Set up Node.js
    uses: actions/setup-node@v3
    with:
      node-version: '18'

  - name: Install dependencies
    run: npm ci

  - name: Run tests
    run: npm test

  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v2
    with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: ${{ secrets.AWS_REGION }}

  - name: Login to Amazon ECR
    id: ecr-login
    uses: aws-actions/amazon-ecr-login@v1

  - name: Build, tag, and push Docker image
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
    run: |
      IMAGE_TAG=${{ github.sha }}
      docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  - name: Update kubeconfig for EKS
    uses: aws-actions/eks-update-kubeconfig@v2
    with:
      cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
      region: ${{ secrets.AWS_REGION }}

  - name: Deploy to EKS with Helm
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    run: |
      helm upgrade --install sticky-notes ./sticky-notes-chart \
        --namespace default \
        --set serviceAccount.create=false \
        --set ingress.enabled=false \
        --set autoscaling.enabled=false \
        --set env.dbHost=postgres \
        --set env.dbPort=5432 \
        --set env.dbName=sticky_dev \
        --set env.dbUser=postgres \
        --set env.dbPass=postgres \
        --set env.jwtSecret=$JWT_SECRET \
        --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY \
        --set image.tag=$IMAGE_TAG