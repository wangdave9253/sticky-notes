name: CI/CD Pipeline for Sticky Notes

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: sticky_dev
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: sticky_dev
      DB_USER: postgres
      DB_PASS: postgres
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Debug ECR vars
        run: |
          echo "ECR_REGISTRY = $ECR_REGISTRY"
          echo "ECR_REPOSITORY = $ECR_REPOSITORY"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY \
            || aws ecr create-repository --repository-name $ECR_REPOSITORY --region $AWS_REGION

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS with Helm
        run: |
          IMAGE_TAG=${{ github.sha }}
          helm upgrade --install sticky-notes ./sticky-notes-chart \
            --namespace default \
            --set serviceAccount.create=false \
            --set ingress.enabled=false \
            --set autoscaling.enabled=false \
            --set env.dbHost=postgres \
            --set env.dbPort=5432 \
            --set env.dbName=sticky_dev \
            --set env.dbUser=postgres \
            --set env.dbPass=postgres \
            --set env.jwtSecret=$JWT_SECRET \
            --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY \
            --set image.tag=$IMAGE_TAG